@model FrozenCritters.Models.Products
@{
    ViewBag.Title = "Edit Product";
    var cats = FrozenCritters.Models.FrozenCrittersDb.GetCategories();
    var categoryName = FrozenCritters.Models.FrozenCrittersDb.GetCategory(Model.CategoriesId);
    var message = ViewBag.Error;
}
<h2>Edit Product</h2>

<p style="color:red;">@message</p>

@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Name</span>
                @Html.EditorFor(model => model.ProductsName, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsName } })
                @Html.ValidationMessageFor(model => model.ProductsName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Description</span>
                @Html.EditorFor(model => model.ProductsDescription, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsDescription } })
                @Html.ValidationMessageFor(model => model.ProductsDescription, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Price</span>
                @Html.EditorFor(model => model.ProductsPrice, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsPrice } })
                @Html.ValidationMessageFor(model => model.ProductsPrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Sale Price</span>
                @Html.EditorFor(model => model.ProductsSalePrice, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsSalePrice } })
                @Html.ValidationMessageFor(model => model.ProductsSalePrice, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Shipping Charge</span>
                @Html.EditorFor(model => model.ProductsShippingCharge, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsShippingCharge } })
                @Html.ValidationMessageFor(model => model.ProductsShippingCharge, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Handling Charge</span>
                @Html.EditorFor(model => model.ProductsHandlingCharge, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsHandlingCharge } })
                @Html.ValidationMessageFor(model => model.ProductsHandlingCharge, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="rememberMe">
                @Html.EditorFor(model => model.ProductsFeatureSale)
                @Html.ValidationMessageFor(model => model.ProductsFeatureSale, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.ProductsFeatureSale)
            </div>
        </div>
        <div class="form-group">
            <div class="rememberMe">
                @Html.EditorFor(model => model.ProductsFeature)
                @Html.ValidationMessageFor(model => model.ProductsFeature, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.ProductsFeature)
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Product Quantity</span>
                @Html.EditorFor(model => model.ProductsQuantity, new { htmlAttributes = new { @class = "form-control", value = Model.ProductsQuantity } })
                @Html.ValidationMessageFor(model => model.ProductsQuantity, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="loginLabel">
                <span class="loginLabel">Category</span>
                <select class="form-control" id="CategoriesId" name="CategoriesId">
                    <option value="@Model.CategoriesId" id="@Model.CategoriesId" name="@Model.CategoriesId">@FrozenCritters.Models.FrozenCrittersDb.GetCategory(Model.CategoriesId).CategoriesName</option>
                    @foreach (var cat in cats)
                    {
                        <option value="@cat.CategoriesId" id="@cat.CategoriesId" name="CategoriesId">@cat.CategoriesName</option>
                    }
                </select>
            </div>
        </div>

        <div class="photoLabel">Main Photo: </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="ProductsPhoto" id="mainPhoto" accept="image/jpg, image/png" />
            </div>
        </div>

        <div class="photoLabel">Alt Photo 1: </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="ProductsPhoto2" id="altPhoto1" accept="image/jpg, image/png" />
            </div>
        </div>

        <div class="photoLabel">Alt Photo 2: </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="ProductsPhotot3" id="altPhoto2" accept="image/jpg, image/png" />
            </div>
        </div>

        <div class="photoLabel">Alt Photo 3: </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="ProductsPhoto4" id="altPhoto3" accept="image/jpg, image/png" />
            </div>
        </div>

        <div class="photoLabel">Alt Photo 4: </div>
        <div class="form-group">
            <div class="col-md-10">
                <input type="file" name="ProductsPhoto5" id="altPhoto4" accept="image/jpg, image/png" />
            </div>
        </div>

        <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-default" />
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>